image: 
  - Visual Studio 2017
  - Ubuntu

platform:
  - x64

environment:
  PKG_CACHE_PATH: '%USERPROFILE%\pkg-cache'

cache:
  - '%APPDATA%\npm-cache'
  - '%LOCALAPPDATA%\bower'
  - '%USERPROFILE%\pkg-cache'
  - '~/.npm'
  # - '../nodecg/node_modules'
  # - '../nodecg/bundles/%APPVEYOR_PROJECT_SLUG%/node_modules'

stack: node 10

install:
  - ps: | 
      if ($isWindows) {
        Install-Product node 10 x64
      }
  - cmd: choco install reshack --no-progress
  - sh: export PATH="$(yarn global bin):$PATH"
  - git config --global url.git://github.com/.insteadOf https://github.com/
  - git reset --hard HEAD
  - yarn global add bower pkg
  - npm ci
  - bower install

before_build:
  - yarn --version
  - npm --version

build_script:
  - ps: |
      if ($isWindows) {
          $env:RH_PATH = "C:\Program Files (x86)\Resource Hacker"
          $env:PATH = "$env:RH_PATH;$env:PATH"
          $env:TARGET_EXE = "dashboard.exe"
          $env:TARGET_PLATFORM = "node10-win-x64"
      } else {
          $env:TARGET_EXE = "dashboard"
          $env:TARGET_PLATFORM = "node10-linux-x64"
      }
  - cd ..
  - git clone https://github.com/nodecg/nodecg.git
  - cd nodecg
  - git checkout v1.3.2
  - ps: (Get-Content ./package.json).Replace('"main": "index.js"','"main": "index.js", "bin": "index.js"') | Out-File ./package.json
  - npm ci
  - bower install
  # Delete git directory files so they are not included in the final package.
  - ps: Remove-Item ./.git -Force -Recurse
  - ps: Remove-Item $env:APPVEYOR_BUILD_FOLDER/.git -Force -Recurse
  # Move project files to bundles for use by nodecg
  - ps: Move-Item $env:APPVEYOR_BUILD_FOLDER\make-versioninfo.ps1 .
  - ps: Move-Item $env:APPVEYOR_BUILD_FOLDER bundles/$env:APPVEYOR_PROJECT_SLUG
  - ps: New-Item -ItemType Directory -Force -Path ./instrumented
  - ps: pkg . --targets $env:TARGET_PLATFORM --public -o $env:TARGET_EXE
  - ps: New-Item -ItemType Directory -Force -Path ./cfg
  - ps: | 
      if ($isWindows) {
        .\make-versioninfo.ps1
        Write-Host "This is obviously a test of sanity"
      }
  - cmd: ResourceHacker -open .\version-info.rc -save .\version-info.res -action compile
  - cmd: ResourceHacker -open %TARGET_EXE% -save %TARGET_EXE% -action addoverwrite -resource .\version-info.res
  - ps: '"{""logging"": {""console"": {""level"": ""info""},""file"": {""enabled"": true,""level"": ""debug""},""replicants"": false}}" | Out-File cfg/nodecg.json -Encoding ASCII'
  - ps: Start-FileDownload 'https://www.dropbox.com/s/nv229lvugehx8jt/alttp-restreamer-demo.json?dl=1' -FileName 'cfg/alttp-restreamer.json'

after_build:
  - ps: |
      if ($isWindows) {
        $env:PKG_ZIP_NAME = "alttp-restreamer-$env:APPVEYOR_BUILD_VERSION-$(-join $env:APPVEYOR_REPO_COMMIT[0..7]).zip"
        $env:TARGET_EXE = "dashboard.exe"
      } else {
        $env:PKG_ZIP_NAME = "alttp-restreamer-$env:APPVEYOR_BUILD_VERSION-$(-join $env:APPVEYOR_REPO_COMMIT[0..7]).tar.gz"
        $env:TARGET_EXE = "dashboard"
      }
  - cmd: 7z a %PKG_ZIP_NAME% %TARGET_EXE% cfg
  - sh: chmod +x $TARGET_EXE
  - sh: tar czf $PKG_ZIP_NAME $TARGET_EXE cfg
  - ps: New-Item -ItemType Directory -Force -Path $env:APPVEYOR_BUILD_FOLDER
  - ps: Move-Item $env:PKG_ZIP_NAME $env:APPVEYOR_BUILD_FOLDER

test: off

artifacts:
  - path: '%PKG_ZIP_NAME%'
    name: pkg-alttp-restreamer